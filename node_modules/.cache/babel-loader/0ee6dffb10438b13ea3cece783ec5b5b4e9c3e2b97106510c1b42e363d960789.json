{"ast":null,"code":"var _jsxFileName = \"/Users/zain/Documents/Coding Challenges/untitled folder/contact-search/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ContactSearch from \"./components/Search\";\nimport ContactTable from \"./components/ContactTable\";\nimport ContactDetails from \"./components/ContactDetails\";\nimport contactsData from \"./data/contacts.json\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [filteredContacts, setFilteredContacts] = useState(contactsData);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const handleSearch = filters => {\n    const filtered = contactsData.filter(contact => Object.keys(filters).every(key => {\n      var _contact$key;\n      if (key === \"address\") {\n        return Object.keys(filters.address).every(addressKey => {\n          var _contact$address$addr;\n          return !filters.address[addressKey] || (// Skip if filter value is empty\n          (_contact$address$addr = contact.address[addressKey]) === null || _contact$address$addr === void 0 ? void 0 : _contact$address$addr.toString().toLowerCase().includes(filters.address[addressKey].toLowerCase()));\n        });\n      }\n      return !filters[key] || (// Skip if filter value is empty\n      (_contact$key = contact[key]) === null || _contact$key === void 0 ? void 0 : _contact$key.toString().toLowerCase().includes(filters[key].toLowerCase()));\n    }));\n    setFilteredContacts(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ContactSearch, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactTable, {\n      contacts: filteredContacts,\n      onSelect: setSelectedContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactDetails, {\n      contact: selectedContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mvxXpvSmh4mn7aLWUcfKpsuXu1k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ContactSearch","ContactTable","ContactDetails","contactsData","jsxDEV","_jsxDEV","App","_s","filteredContacts","setFilteredContacts","selectedContact","setSelectedContact","handleSearch","filters","filtered","filter","contact","Object","keys","every","key","_contact$key","address","addressKey","_contact$address$addr","toString","toLowerCase","includes","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","contacts","onSelect","_c","$RefreshReg$"],"sources":["/Users/zain/Documents/Coding Challenges/untitled folder/contact-search/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ContactSearch from \"./components/Search\";\nimport ContactTable from \"./components/ContactTable\";\nimport ContactDetails from \"./components/ContactDetails\";\nimport contactsData from \"./data/contacts.json\";\nimport './App.css';\n\nconst App = () => {\n  const [filteredContacts, setFilteredContacts] = useState(contactsData);\n  const [selectedContact, setSelectedContact] = useState(null);\n\n  const handleSearch = (filters) => {\n    const filtered = contactsData.filter((contact) =>\n      Object.keys(filters).every((key) => {\n        if (key === \"address\") {\n          return Object.keys(filters.address).every(\n            (addressKey) =>\n              !filters.address[addressKey] || // Skip if filter value is empty\n              contact.address[addressKey]\n                ?.toString()\n                .toLowerCase()\n                .includes(filters.address[addressKey].toLowerCase())\n          );\n        }\n        return (\n          !filters[key] || // Skip if filter value is empty\n          contact[key]?.toString().toLowerCase().includes(filters[key].toLowerCase())\n        );\n      })\n    );\n    setFilteredContacts(filtered);\n  };\n\n  return (\n    <div>\n      <ContactSearch onSearch={handleSearch} />\n      <ContactTable contacts={filteredContacts} onSelect={setSelectedContact} />\n      <ContactDetails contact={selectedContact} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAACI,YAAY,CAAC;EACtE,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMa,YAAY,GAAIC,OAAO,IAAK;IAChC,MAAMC,QAAQ,GAAGX,YAAY,CAACY,MAAM,CAAEC,OAAO,IAC3CC,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,CAACM,KAAK,CAAEC,GAAG,IAAK;MAAA,IAAAC,YAAA;MAClC,IAAID,GAAG,KAAK,SAAS,EAAE;QACrB,OAAOH,MAAM,CAACC,IAAI,CAACL,OAAO,CAACS,OAAO,CAAC,CAACH,KAAK,CACtCI,UAAU;UAAA,IAAAC,qBAAA;UAAA,OACT,CAACX,OAAO,CAACS,OAAO,CAACC,UAAU,CAAC,KAAI;UAAA,CAAAC,qBAAA,GAChCR,OAAO,CAACM,OAAO,CAACC,UAAU,CAAC,cAAAC,qBAAA,uBAA3BA,qBAAA,CACIC,QAAQ,CAAC,CAAC,CACXC,WAAW,CAAC,CAAC,CACbC,QAAQ,CAACd,OAAO,CAACS,OAAO,CAACC,UAAU,CAAC,CAACG,WAAW,CAAC,CAAC,CAAC;QAAA,CAC1D,CAAC;MACH;MACA,OACE,CAACb,OAAO,CAACO,GAAG,CAAC,KAAI;MAAA,CAAAC,YAAA,GACjBL,OAAO,CAACI,GAAG,CAAC,cAAAC,YAAA,uBAAZA,YAAA,CAAcI,QAAQ,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACd,OAAO,CAACO,GAAG,CAAC,CAACM,WAAW,CAAC,CAAC,CAAC;IAE/E,CAAC,CACH,CAAC;IACDjB,mBAAmB,CAACK,QAAQ,CAAC;EAC/B,CAAC;EAED,oBACET,OAAA;IAAAuB,QAAA,gBACEvB,OAAA,CAACL,aAAa;MAAC6B,QAAQ,EAAEjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzC5B,OAAA,CAACJ,YAAY;MAACiC,QAAQ,EAAE1B,gBAAiB;MAAC2B,QAAQ,EAAExB;IAAmB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1E5B,OAAA,CAACH,cAAc;MAACc,OAAO,EAAEN;IAAgB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAjCID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}